name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    
    services:
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Create test environment file
      run: |
        cd backend
        echo "NODE_ENV=test" > .env
        echo "MONGODB_URI=mongodb://localhost:27017/petshop_test" >> .env
        echo "JWT_SECRET=test_jwt_secret_for_ci_only" >> .env
        echo "PORT=5001" >> .env
        echo "FRONTEND_URL=http://localhost:3000" >> .env
    
    - name: Run backend linting
      run: |
        cd backend
        npm run lint || echo "Linting not configured"
    
    - name: Run backend unit tests
      run: |
        cd backend
        npm run test:unit
    
    - name: Run backend integration tests
      run: |
        cd backend
        npm run test:integration
    
    - name: Run backend tests with coverage
      run: |
        cd backend
        npm run test:coverage
    
    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --coverage --watchAll=false
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./backend/coverage
        flags: backend
        name: backend-coverage
    
    - name: Upload frontend coverage
      uses: codecov/codecov-action@v3
      with:
        directory: ./frontend/coverage
        flags: frontend
        name: frontend-coverage

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Run security audit (backend)
      run: |
        cd backend
        npm audit --audit-level=high
    
    - name: Run security audit (frontend)
      run: |
        cd frontend
        npm audit --audit-level=high
    
    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD

  load-test:
    runs-on: ubuntu-latest
    needs: test
    
    services:
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd backend
        npm ci
    
    - name: Create environment file
      run: |
        cd backend
        echo "NODE_ENV=test" > .env
        echo "MONGODB_URI=mongodb://localhost:27017/petshop_load_test" >> .env
        echo "JWT_SECRET=load_test_jwt_secret" >> .env
        echo "PORT=5001" >> .env
    
    - name: Start server in background
      run: |
        cd backend
        npm run dev &
        sleep 10
    
    - name: Run load tests
      run: |
        cd backend
        TOTAL_REQUESTS=20 CONCURRENCY=5 node __tests__/load/order-load-test.js
    
    - name: Stop server
      run: pkill node || true